services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka_service:
    container_name: kafka_service
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    env_file:
      - .env
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092  # by default listen all
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_BROKER}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data

  postgres:
    container_name: postgres
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka_producer:
    container_name: kafka_producer
    build:
      context: ./producer
      dockerfile: Dockerfile
    depends_on:
      - kafka_service

  spark_consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    container_name: spark_consumer
    depends_on:
      - kafka_producer
      - postgres
    env_file:
      - .env
    environment:
      SPARK_MODE: "master"
      SPARK_MASTER_URL: "spark://spark:7077"
    ports:
      - "8080:8080"
      - "7077:7077"
      - "8888:8888"  # port to run jobs in Jupyter
    volumes:
      - spark_jars:/opt/spark/jars

volumes:
  kafka_data:
  postgres_data:
  spark_jars: